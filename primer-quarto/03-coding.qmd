# Coding

```{r setup, include=FALSE, echo=FALSE}
library(dspatterns)
```


## Develop code

::: {layout="[50,50]"}

::: column
The code inside your Quarto documents will often start small, then grow as you work. 
\
\
It is totally natural to use your `.qmd` as a scratchpad to develop code. Many users find that using `.qmd` files helps them "code while thinking."
\
\
`.qmd` files are designed to be used interactively in RStudio. You can use RStudio to test your code one chunk at a time, which we'll show now.
:::

![Hedgehog developing a new Quarto file, art by Allison Horst](img/pattern.png)
:::




## Run code chunks

::: {layout="[50,50]"}

::: column
For every gray code chunk, you'll notice a green arrow on the right: ![](img/run-button.png)


When you click "Run Current Chunk", the code is sent straight to your console. 

If you run the second chunk after the first, it also works! This is because RStudio is running your code chunks in your global environment, so it finds the `words` dataframe.

Results like plots and tables are appear inline in your document- but don't get confused, your source `.qmd` file still has not changed.
:::


:::


## Add new code chunks

::: {layout="[50,50]"}

::: column
Now let's add a new code chunk. You can insert chunks any of three ways:

+ use the Add Chunk ![](img/chunk-button.png) button in the editor toolbar

+ use the keyboard shortcut **Ctrl + Alt + I** (OS X: **Cmd + Option + I**)

+ type ` ```{r} ` and ` ``` ` (the symbols are backticks)
:::


:::


## Edit code chunks

Let's try a different color palette, available through a package called [`paletteer`](https://emilhvitfeldt.github.io/paletteer/), which you can install from CRAN:

```r
install.packages("paletteer")
```


The main differences here are:

1. We reorganized our code chunks so that all packages are loaded in the first code chunk, and
1. We used the `scale_color_paletteer_d()` function from the `paletteer` package to try out a new color palette.


## Set up your panes

::: {layout="[50,50]"}

::: column
In RStudio, you can remove the inline preview in RStudio, and instead send your code output to the console. 
\
\
This can be done as a global setting in RStudio by going to **RStudio > Preferences > R Markdown**.
\
\
On that options page, uncheck the box shown on the right. 
\
\
Scroll down and click the "Apply" button for this setting to take effect.
:::

![](img/ide-inline.png)
:::



Your workspace in RStudio then would look something like this:

![](img/ide-console.png)

## What's next?

In this section, we showed how you can develop Quarto documents in RStudio, one code chunk at a time. A `.qmd` file can be used to both save and execute code, and to create a reproducible record of what you did and how you did it. How to "knit" this record is up next.

