# How it works

```{r setup, include=FALSE, echo=FALSE}
library(dspatterns)
```

Thus far, we've shown how you can use Quarto with RStudio to interactively develop code inside an `.qmd` document. Next, we showed how you can also take the same `.qmd` document and knit it to make a single output file, like a simple HTML page. So, you have learned how to fill up an `.qmd` file with your good ideas, code, and data. How does it all actually work?

```{r echo=FALSE, out.width="100%"}
knitr::include_graphics("img/quarto-how.png")
```


## The **knitr** package

::: {layout="[60,-5,35]"}

::: column
When you click the "Render" button, **Quarto** detects your first code chunk using the R engine, then feeds the `.qmd` file to an R package called **knitr** (<https://yihui.org/knitr/>) as the code execution engine. 
\
\
The **knitr** package executes all of the code chunks. Quarto creates a new markdown (`.md`) document, which then includes your good ideas plus your code *and* its **knitr**-generated output (figures, results, tables, etc.). 
:::

![](img/knitr.png)
:::



So, **knitr** turns your `.qmd` into an `.md`. This file is no longer executable, but it is still a plain text document without any formatting. Because of this, the actual `.md` file is temporary and not kept by default.

::: {layout="[50,50]"}
### `.qmd`

### .`md`
::: 


If you want to keep a copy of the Markdown file after rendering, you can do so using the `keep-md` option:

```yaml
---
format: html
execute:
  keep-md: true
---
```

This is documented on the Quarto website (<https://quarto.org/docs/computations/execution-options.html#intermediates>).

## Pandoc

::: {layout="[60,-5,35]"}


::: column
The markdown file generated by **knitr** is then processed by a tool called Pandoc (<https://pandoc.org/>).
\
\
Pandoc is a free and open-source document converter. **Quarto** calls Pandoc for you to create the finished output file. Pandoc also transforms your Markdown-flavored text into formatted text in your final file format.
\
\
If you choose a `format` in your YAML, this is passed to Pandoc to convert the `.md` into the right format. This is the formatted document that you'll want to read and share with others. 

:::

![](img/pandoc.png)

::: 


three columns: html / word / pdf

## Render from the command line

This may all sound complicated, but **Quarto** and RStudio makes this simpler for you by wrapping it all up with the "Render" button.

If you don't use RStudio, or if you simply prefer using the command line, you can also render a `.qmd` file from the R console using the **quarto** package.

```{r eval=FALSE}
library(quarto)
quarto_render("early-words.qmd")
```

The `quarto_render()` function will pass your `.qmd` file through the same process described above with **knitr** and Pandoc.

## What's next?

One of the most powerful features of the **knitr** package is how it helps you control how your code and output look in your final finished product. Want to hide some gnarly-looking code that nevertheless makes a beautiful plot? Want to save all the plots you made in a directory when you knit? Read on to learn about **knitr** code chunk options for figures.

