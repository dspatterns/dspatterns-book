# Starting with Projects

Decision: start with Quarto projects

``` {r setup, include=FALSE, echo=FALSE}
```

This chapter covers

- Understanding our learning path for this book
- File organization basics; using Projects
- How to organize a project folder
  - raw data
  - clean data
  - each file should be named clearly (e.g., `...-raw.csv`)
  - on naming incoming files from collaborators:
    - some files can strange names; rename them sensibility (with iso dates and some words that indicate provenance)
    - create a data-README file that has notes on where files came from; like a 'lab notebook'
- GitHub:
  - one repo per project (matching with local project paradigm)
  - checking in data project with all files (including data) is totally fine and recommended
  - if your data size is really big (~100 MB) then consider .gitignore-ing the data (problem is that the project won't be truly reproducible)
  - use happygitwithr as an invaluable resource
- Introduce Quarto
  - test mechanics of Quarto (project relative paths)
    - is there a new document flow and what should be used (HTML)
      - easier to share and most portable/flexible format
      - better features and looks better
    - does moving the quarto file around into different subfolders cause issues
- Where to go for help (in the appendix)

Notes: 
 
- use this to develop a single project following the chapter pattern
- show the Simpsons Paradox plot
- draw from: https://apreshill.github.io/data-vis-labs-2018/slides.html for organization of this chapter

We'll start with our first pattern. 

## Explore

- explore file structure on your personal system
- tie this into GitHub which is your remote system (almost like a sync)
- When starting a new Quarto file, we recommend using a top-level `index.qmd` (better for sharing)

- Light data analysis (filler content mostly to be more instructive for learning Quarto):
  - anatomy of a document (installed packages and using packages and the text and code chunks)
  - we have the option to show the chunk output either inline (default) or in the Viewer/Plots pane (show option in settings)
  - introduce the dataset (`penguins` from `palmerpenguins`) and inspect the data:
    - `head()`, `tail()`, `dplyr::glimpse()`, `skimr::skim()` (let's avoid the `%>%` for now)

## Understand

- review how projects fit in with the documents they contain and where they physically live
- relationship between your local files and your remote files (in GitHub)

## Explain

- talking to yourself with Quarto
- note that in Appendix there is a Markdown reference

- add a `readme.md` to have general notes for the project

## Share

- with GitHub!
- talking to others, if future thing doesn't pan out netlify drop

## DIY

- use: https://alison.netlify.app/rls-plot-twist/#20

