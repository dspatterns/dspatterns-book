on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  schedule:
    # run every day at 11 PM
    - cron: '0 23 * * *'

name: build-book

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      # NETLIFY_AUTH_TOKEN and NETLIFY_SITE_ID added in the repo's secrets
      NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
      NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
      isExtPR: ${{ github.event.pull_request.head.repo.fork == true }}
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - name: Checkout repo
        uses: actions/checkout@v2

      - name: Setup pandoc
        uses: r-lib/actions/setup-pandoc@v2

      - name: Setup R
        uses: r-lib/actions/setup-r@v2
        with:
          r-version: 'release'
          use-public-rspm: true

      - name: Query dependencies
        run: |
          install.packages('remotes')
          saveRDS(remotes::dev_package_deps(dependencies = TRUE), ".github/depends.Rds", version = 2)
        shell: Rscript {0}

      - name: Cache R packages
        if: runner.os != 'Windows'
        uses: actions/cache@v3
        with:
          path: ${{ env.R_LIBS_USER }}
          key: ${{ runner.os }}-r-${{ matrix.config.r }}-3-${{ hashFiles('.github/depends.Rds') }}
          restore-keys: ${{ runner.os }}-r-${{ matrix.config.r }}-3-

      - name: Install system dependencies
        if: runner.os == 'Linux'
        env:
          RHUB_PLATFORM: linux-x86_64-ubuntu-gcc
        run: |
          Rscript -e "remotes::install_github('r-hub/sysreqs')"
          sysreqs=$(Rscript -e "cat(sysreqs::sysreq_commands('DESCRIPTION'))")
          sudo -s eval "$sysreqs"

      - name: Install R packages
        run: |
         install.packages("knitr")
         install.packages("remotes")
         install.packages("tidyverse")
         install.packages("quarto")
         install.packages("palmerpenguins")
         install.packages("gt")
         install.packages("DT")
         install.packages("ggridges")
         install.packages("skimr")
         install.packages("pointblank")
         install.packages("readxl")
         install.packages("janitor")
         install.packages("forcats")
         install.packages("tidyr")
         install.packages("stringr")
         install.packages("lubridate")
         install.packages("readr")
         install.packages("babynames")
         install.packages("paletteer")
         remotes::install_github("dspatterns/dspatterns")
         remotes::install_github("apreshill/bakeoff")
        shell: Rscript {0}

      - name: Install Quarto
        uses: quarto-dev/quarto-actions/install-quarto@v1
        # with:
          # To install LaTeX to build PDF book
          # tinytex: true
          # uncomment below and fill to pin a version
          # version: 0.9.105

      - name: Print Quarto version
        # Add any command line argument needed
        run: |
          quarto --version

      - name: Render book to all format
        # Add any command line argument needed
        run: |
          quarto render

      - name: Deploy to Netlify
        if: contains(env.isExtPR, 'false')
        id: netlify-deploy
        uses: nwtgck/actions-netlify@v1.2
        with:
          publish-dir: 'docs'
          production-branch: main
          github-token: ${{ secrets.GITHUB_TOKEN }}
          deploy-message:
            'Deploy from GHA: ${{ github.event.pull_request.title || github.event.head_commit.message }} (${{ github.sha }})'
          # these all default to 'true'
          enable-pull-request-comment: false
          enable-commit-comment: false
          # enable-commit-status: true
          # overwrites-pull-request-comment: true
        timeout-minutes: 1
